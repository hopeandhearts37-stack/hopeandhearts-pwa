hope-and-hearts-pwa/
│
├─ index.html       ← Halaman utama versi modern & multi-bahasa
├─ manifest.json    ← Konfigurasi PWA
├─ sw.js            ← Service Worker untuk offline
├─ icon-192.png     ← Ikon PWA 192x192
├─ icon-512.png     ← Ikon PWA 512x512
<!DOCTYPE html>
<html lang="id">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="theme-color" content="#ff69b4">
<title>Hope and Hearts PWA</title>

<link rel="manifest" href="manifest.json">
<link rel="icon" href="icon-192.png" sizes="192x192">
<link rel="apple-touch-icon" href="icon-192.png">

<style>
  * { margin: 0; padding: 0; box-sizing: border-box; }
  body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #fff0f5, #ffe4e1); color: #333; min-height: 100vh; display: flex; flex-direction: column; }

  header { background: #ff69b4; color: #fff; padding: 1rem 2rem; display: flex; justify-content: space-between; align-items: center; position: relative; }
  header h1 { font-size: 1.5rem; }
  select { padding: 0.3rem 0.5rem; border-radius: 5px; border: none; font-size: 0.9rem; }

  main { flex: 1; display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 2rem; }
  .card { background: rgba(255,255,255,0.9); border-radius: 20px; padding: 2rem; text-align: center; width: 90%; max-width: 400px; box-shadow: 0 8px 20px rgba(0,0,0,0.15); animation: fadeIn 1s ease; }
  .card img { width: 200px; border-radius: 15px; margin-bottom: 1rem; transition: transform 0.3s; }
  .card img:hover { transform: scale(1.05); }
  .card p { margin: 1rem 0; font-size: 1rem; line-height: 1.5; }
  a.button { display: inline-block; padding: 0.8rem 1.5rem; margin-top: 1rem; background: #ff1493; color: #fff; text-decoration: none; border-radius: 10px; font-weight: bold; transition: 0.3s; }
  a.button:hover { background: #ff69b4; transform: translateY(-2px); }

  @keyframes fadeIn {
    0% { opacity: 0; transform: translateY(20px);}
    100% { opacity: 1; transform: translateY(0);}
  }
</style>
</head>
<body>

<header>
  <h1 id="header-title">Hope and Hearts</h1>
  <select id="language-select">
    <option value="id">Indonesia</option>
    <option value="en">English</option>
    <option value="ar">العربية</option>
    <option value="zh">中文</option>
    <option value="ru">Русский</option>
  </select>
</header>

<main>
  <div class="card">
    <img src="https://i.postimg.cc/xc5xGncD/1755925812710.jpg" alt="Hope and Hearts">
    <p id="main-text">Selamat datang di Hope and Hearts! Nikmati konten inspiratif dan positif di blog kami langsung dari aplikasi ini.</p>
    <a href="https://hope-andhearts.blogspot.com/" class="button" id="blog-button">Buka Blog</a>
  </div>
</main>

<script>
const texts = {
  id: { header: "Hope and Hearts", main: "Selamat datang di Hope and Hearts! Nikmati konten inspiratif dan positif di blog kami langsung dari aplikasi ini.", button: "Buka Blog" },
  en: { header: "Hope and Hearts", main: "Welcome to Hope and Hearts! Enjoy inspiring and positive content from our blog directly through this app.", button: "Open Blog" },
  ar: { header: "أمل وقلوب", main: "مرحبًا بكم في Hope and Hearts! استمتع بالمحتوى الملهم والإيجابي من مدونتنا مباشرة من خلال هذا التطبيق.", button: "افتح المدونة" },
  zh: { header: "希望与心", main: "欢迎来到 Hope and Hearts！通过此应用直接欣赏我们博客的启发性和积极内容。", button: "打开博客" },
  ru: { header: "Надежда и Сердца", main: "Добро пожаловать в Hope and Hearts! Наслаждайтесь вдохновляющим и позитивным контентом нашего блога прямо через это приложение.", button: "Открыть блог" }
};

const select = document.getElementById("language-select");
const header = document.getElementById("header-title");
const mainText = document.getElementById("main-text");
const blogButton = document.getElementById("blog-button");

select.addEventListener("change", () => {
  const lang = select.value;
  header.textContent = texts[lang].header;
  mainText.textContent = texts[lang].main;
  blogButton.textContent = texts[lang].button;
});

// Service Worker
if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('sw.js')
    .then(() => console.log('Service Worker terdaftar'))
    .catch(err => console.log('Service Worker gagal:', err));
}
</script>
</body>
</html>
const CACHE_NAME = "hope-and-hearts-cache-v1";
const urlsToCache = ["/", "/index.html", "/icon-192.png", "/icon-512.png"];

self.addEventListener("install", event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(urlsToCache))
  );
});

self.addEventListener("fetch", event => {
  event.respondWith(
    caches.match(event.request).then(response => response || fetch(event.request))
  );
});

